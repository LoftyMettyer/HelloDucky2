@model RCVS.Models.Form1A2Model

<div class="pagecontent">

	@{
		ViewBag.Title = "View1";
	}

	<h1>Initial / first declaration of intention to sit</h1>

	<div class="layout">
		<p>
			<span>You can submit your initial declaration of intention to sit the RCVS statutory membership examination at any time. It is the <b>first</b> step in the examination process.
		   On receipt RCVS will create an examination record for you and, if you etc, etc, etc, etc, etc, etc...
			</span>
		</p>
		<br />
	</div>
	@using (Html.BeginForm("", "", FormMethod.Post, new { @class = "forms default" }))
 {
		@Html.AntiForgeryToken()
		@Html.ValidationSummary(true)


@*@Html.DropDownListFor(x => x.Activities, Model.Activities)			*@
		
		<fieldset>
			<legend><div class="editor-label">
				@Html.LabelFor(model => model.YearToSit)
			</div></legend>
			
			<div class="editor-field">
				@Html.EditorFor(model => model.YearToSit)
				@Html.ValidationMessageFor(model => model.YearToSit)
			</div>
		</fieldset>

		<div class="editor-label">
			@Html.LabelFor(model => model.PlanToSeePractice)
		</div>
		<div class="editor-field">
			@Html.EditorFor(model => model.PlanToSeePractice)
			@Html.ValidationMessageFor(model => model.PlanToSeePractice)
		</div>

		<div class="editor-label">
			@Html.LabelFor(model => model.CurrentlySeeingPractice)
		</div>
		<div class="editor-field">
			@Html.EditorFor(model => model.CurrentlySeeingPractice)
			@Html.ValidationMessageFor(model => model.CurrentlySeeingPractice)
		</div>

		<div class="editor-label">
			@Html.LabelFor(model => model.IELTS)
		</div>
		<div class="editor-field">
			@Html.EditorFor(model => model.IELTS)
			@Html.ValidationMessageFor(model => model.IELTS)
		</div>

		<div class="editor-label">
			@Html.LabelFor(model => model.TakeTestPlanDate)
		</div>
		<div class="editor-field">
			@Html.EditorFor(model => model.TakeTestPlanDate)
			@Html.ValidationMessageFor(model => model.TakeTestPlanDate)
		</div>

		<div class="editor-label">
			@Html.LabelFor(model => model.GraduationDate)
		</div>
		<div class="editor-field">
			@Html.EditorFor(model => model.GraduationDate)
			@Html.ValidationMessageFor(model => model.GraduationDate)
		</div>

		<div class="editor-label">
			@Html.LabelFor(model => model.CourseStartDate)
		</div>
		<div class="editor-field">
			@Html.EditorFor(model => model.CourseStartDate)
			@Html.ValidationMessageFor(model => model.CourseStartDate)
		</div>

		<div class="editor-label">
			@Html.LabelFor(model => model.CourseEndDate)
		</div>
		<div class="editor-field">
			@Html.EditorFor(model => model.CourseEndDate)
			@Html.ValidationMessageFor(model => model.CourseEndDate)
		</div>

		<div class="editor-label">
			@Html.LabelFor(model => model.HasEnclosedTranscript)
		</div>
		<div class="editor-field">
			@Html.EditorFor(model => model.HasEnclosedTranscript)
			@Html.ValidationMessageFor(model => model.HasEnclosedTranscript)
		</div>

		<div class="editor-label">
			@Html.LabelFor(model => model.EnclosedTranscript)
		</div>
		<div class="editor-field">
			@Html.EditorFor(model => model.EnclosedTranscript)
			@Html.ValidationMessageFor(model => model.EnclosedTranscript)
		</div>

		<p>
			<input type="submit" value="Create" />
		</p>
 }

	<div>
		@Html.ActionLink("Back to List", "Index")
	</div>

	@section Scripts {
		@Scripts.Render("~/bundles/jqueryval")
	}

</div>
