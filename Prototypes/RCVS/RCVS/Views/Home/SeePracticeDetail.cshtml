@model RCVS.Models.SeeingPracticeDetailModel

@using (Html.BeginForm("SeePracticeDetail", "Home", FormMethod.Post, new { @class = "forms default" }))
{
	@Html.AntiForgeryToken()
	@Html.ValidationSummary(true)
	
	<p><span>
		   
	   </span></p>
	<div class="wysiwyg popup">
		<fieldset>
			<legend>Practice Details</legend>
		
			<div class="field">
				<div class="editor-label label">
					@Html.Label("Indicate Current or Planned")
					<br />
					<sup>(choose Current if within 4 last months or ongoing)</sup>
				</div>
				<div class="">
					@Html.DropDownListFor(m => m.CurrentOrPlanned, new SelectList(Enum.GetValues(typeof(RCVS.Enums.CurrentOrPlanned))))
					@Html.ValidationMessageFor(model => model.CurrentOrPlanned)	
				</div>
			</div>

			<div class="field">
				<div class="editor-label label">
					@Html.LabelFor(model => model.PracticeName)
				</div>
				<div class="editor-field input">
					@Html.EditorFor(model => model.PracticeName)
					@Html.ValidationMessageFor(model => model.PracticeName)
				</div>
			</div>
			<div class="field">
				<div class="editor-label label">
					@Html.LabelFor(model => model.VetName)
					<br />
					<sup>(as it appears in the RCVS Register)</sup>
				</div>
				<div class="editor-field input">
					@Html.EditorFor(model => model.VetName)
					@Html.ValidationMessageFor(model => model.VetName)
				</div>
			</div>
			<div class="field">
				<div class="editor-label label">
					@Html.LabelFor(model => model.StartDate)
				</div>
				<div class="editor-field input">
					@Html.EditorFor(model => model.StartDate)
					@Html.ValidationMessageFor(model => model.StartDate)
				</div>
			</div>
			<div class="field">
				<div class="editor-label label">
					@Html.LabelFor(model => model.EndDate)
				</div>
				<div class="editor-field input">
					@Html.EditorFor(model => model.EndDate)
					@Html.ValidationMessageFor(model => model.EndDate)
				</div>
			</div>
				
		</fieldset>

		<fieldset>
			<legend>Address Details</legend>
			<div class="field">
				<div class="editor-label label">
					@Html.LabelFor(model => model.Address.AddressLine1)
				</div>
				<div class="editor-field input">
					@Html.EditorFor(model => model.Address.AddressLine1)
					@Html.ValidationMessageFor(model => model.Address.AddressLine1)
				</div>
			</div>
			<div class="field">
				<div class="editor-label label">
					@Html.LabelFor(model => model.Address.AddressLine2)
				</div>
				<div class="editor-field input">
					@Html.EditorFor(model => model.Address.AddressLine2)
					@Html.ValidationMessageFor(model => model.Address.AddressLine2)
				</div>
			</div>
			<div class="field">
				<div class="editor-label label">
					@Html.LabelFor(model => model.Address.Town)
				</div>
				<div class="editor-field input">
					@Html.EditorFor(model => model.Address.Town)
					@Html.ValidationMessageFor(model => model.Address.Town)
				</div>
			</div>

			<div class="field">
				<div class="editor-label label">
					@Html.LabelFor(model => model.Address.Country)
				</div>
				<div class="editor-field input">
					@Html.EditorFor(model => model.Address.Country)
					@Html.ValidationMessageFor(model => model.Address.Country)
				</div>
			</div>

			<p>
				<input type="submit" value="Add" class="input_submit"/>
				<input type="button" value="Cancel" class="input_button" onclick="$('#my-dialog').dialog('close');"/>
			</p>
		</fieldset>
	</div>

	
	<script type="text/javascript">

		$(document).ready(function () {
			
			//Attach datepicker
			$('#StartDate').datepicker({
				dateFormat: "dd/mm/yy",
				changeMonth: true,
				changeYear: true				
			});


		});

	</script>
		
		
}