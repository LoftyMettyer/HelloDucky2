@using RCVS.Helpers
@model RCVS.Models.ExaminationApplicationAndFeeModel

<div class="wysiwyg">

	@{
		ViewBag.Title = "2013 examination application and examination fee payment form";
		Layout = "~/Views/Shared/_Layout.cshtml";
	}

	<h1>Examination application and examination fee payment form</h1>
	<h2>The examination entry closing date is TBC</h2>

	@{
		if (!string.IsNullOrEmpty(Request.QueryString["submittedok"]))
		{
		@Html.Raw("<h2 class='submittedOK'>Your information was saved successfully</h2>");
		}
	}

	@using (Html.BeginForm("ExaminationApplicationAndFee", "Home", FormMethod.Post, new { @class = "forms default" }))
 {
		@Html.AntiForgeryToken()
		@Html.ValidationSummary(true)

		<fieldset>
			<legend>Applicant type</legend>
			<div class="field">
				<div class="editor-label label">
					@Html.LabelFor(model => model.IsNewApplicant)
				</div>
				<div class="editor-field input">
					@Html.DropDownListFor(model => model.IsNewApplicant, new List<SelectListItem>()
						{ new SelectListItem(){ Text = "Yes", Value="True"}, 
							new SelectListItem(){ Text = "No", Value="False"}})

					@Html.ValidationMessageFor(model => model.IsNewApplicant)
				</div>
			</div>

			<div class="field">
				<div class="editor-label label">
					@Html.LabelFor(model => model.YearOfLastApplication)
				</div>
				<div class="editor-field input">
					@Html.DropDownListFor(model => model.YearOfLastApplication, Model.YearOfLastApplicationDropDown)

					@Html.ValidationMessageFor(model => model.YearOfLastApplication)
				</div>
			</div>

			<div class="field">
				<div class="editor-label label">
					@Html.LabelFor(model => model.SubjectWithPermission)
				</div>
				<div class="editor-field input">
					@Html.DropDownListFor(model => model.SubjectWithPermission, Model.SubjectsWithPermissionDropDown)

					@Html.ValidationMessageFor(model => model.SubjectWithPermission)
				</div>
			</div>
		</fieldset>

		<fieldset>
			<legend>Postgraduate training and qualifications</legend>
			@Html.Raw(Html.EditTable("tblQualifications", Model.Qualifications, null))

			<input id="addQualification" type="button" value="Add..." class="input_button" onclick='addActivity("tblQualification")' />

			@{ int i = 0; }
			@foreach (var obj in Model.Qualifications)
	 {
				@Html.HiddenFor(m => m.Qualifications[i].Name)
				@Html.HiddenFor(m => m.Qualifications[i].AwardingBody)
				@Html.HiddenFor(m => m.Qualifications[i].ObtainedDate)
		 ++i;
	 }


		</fieldset>

		<fieldset>
			<legend>Employment since graduation</legend>
			@Html.Raw(Html.EditTable("tblEmployment", Model.EmploymentHistory, null))
			
			<input id="addEmployment" type="button" value="Add..." class="input_button" />

			@{ i = 0; }
			@foreach (var obj in Model.EmploymentHistory)
	 {
				@Html.HiddenFor(m => m.EmploymentHistory[i].City)
				@Html.HiddenFor(m => m.EmploymentHistory[i].Country)
				@Html.HiddenFor(m => m.EmploymentHistory[i].FromDate)
				@Html.HiddenFor(m => m.EmploymentHistory[i].Position)
				@Html.HiddenFor(m => m.EmploymentHistory[i].PracticeName)
				@Html.HiddenFor(m => m.EmploymentHistory[i].ToDate)
		 ++i;
	 }
		</fieldset>
		<fieldset>
			<legend>Registration/license to practise as a veterinary surgeon</legend>

			<div class="editor-label">
				@Html.LabelFor(model => model.PreviouslyRegistered)
			</div>
			<div class="editor-field">
				@Html.DropDownListFor(model => model.PreviouslyRegistered, new List<SelectListItem>()
						{ new SelectListItem(){ Text = "Yes", Value="True"}, 
							new SelectListItem(){ Text = "No", Value="False"}})
				@Html.ValidationMessageFor(model => model.PreviouslyRegistered)
			</div>

			<div class="editor-label">
				@Html.LabelFor(model => model.RegistrationAuthority)
			</div>
			<div class="editor-field">
				@Html.EditorFor(model => model.RegistrationAuthority)
				@Html.ValidationMessageFor(model => model.RegistrationAuthority)
			</div>

			<div class="editor-label">
				@Html.LabelFor(model => model.RegistrationDate)
			</div>
			<div class="editor-field">
				@Html.EditorFor(model => model.RegistrationDate)
				@Html.ValidationMessageFor(model => model.RegistrationDate)
			</div>

			<div class="editor-label">
				@Html.LabelFor(model => model.RegistrationExpiryDate)
			</div>
			<div class="editor-field">
				@Html.EditorFor(model => model.RegistrationExpiryDate)
				@Html.ValidationMessageFor(model => model.RegistrationExpiryDate)
			</div>

			<div class="editor-label">
				@Html.LabelFor(model => model.PreviouslyBanned)
			</div>
			<div class="editor-field">
				@Html.DropDownListFor(model => model.PreviouslyBanned, new List<SelectListItem>()
						{ new SelectListItem(){ Text = "Yes", Value="True"}, 
							new SelectListItem(){ Text = "No", Value="False"}})
				@Html.ValidationMessageFor(model => model.PreviouslyBanned)
			</div>

			<div class="editor-label">
				@Html.LabelFor(model => model.BanReasons)
			</div>
			<div class="editor-field">
				@Html.EditorFor(model => model.BanReasons)
				@Html.ValidationMessageFor(model => model.BanReasons)
			</div>

			<div class="editor-label">
				@Html.LabelFor(model => model.NotRegisteredReasons)
			</div>
			<div class="editor-field">
				@Html.EditorFor(model => model.NotRegisteredReasons)
				@Html.ValidationMessageFor(model => model.NotRegisteredReasons)
			</div>

		</fieldset>
		
		<legend>
			<p>
				<b>£1430</b> is the fee for sitting the whole examination, made up of £1200 + £230 non refundable administration charge
			</p>
			<p>
				<b>£715</b> is the part fee for sitting one or two subjects of the examination and is made up of £600 + £115 non refundable administration charge
			</p>
		</legend>
		

		<fieldset>
			<legend>Examination fees</legend>
			<div class="editor-label">
				@Html.LabelFor(model => model.AmountYouArePaying)
			</div>
			<div class="editor-field">
				@Html.DropDownListFor(model => model.AmountYouArePaying, Model.AmountYouArePayingDropDown)
			</div>
		</fieldset>
		<fieldset>
			<legend>Payment options</legend>
			<div>
				<div>
					<p>Pay with credit card</p>
					<img src="~/Images/CreditCardMockup.jpg" />
				</div>
				<div style="margin-top: 15px;">
					<p>or pay with Paypal</p>
					<script src="/Scripts/paypal-button.min.js?merchant=payments_demo@rcvs.org.uk"
						data-button="buynow"
						data-name="RCVS examination fee"
						data-amount="1430"
						data-currency="GBP"
						data-env="sandbox">
					</script>
				</div>
			</div>
		</fieldset>
	 
		<fieldset>
			<legend>Confirmation</legend>
			<p>
				IF RCVS has not already verified your IELTS test score and confirmed that you are eligable to apply to sit our examination you should upload your IELTS TRF now. Please do <u>not</u> send any other original documents, such as certificates of qualifications to RCVS.
			</p>

			<p>
				If using a cheque or postal order please post it to the following address
			Software Developer
			My House
			My Town
			My Postcode
			</p>

			<p>
				New applicants must enclose 2 passport photographs and write their name of the back of both photos.
			</p>

			<p>
				Please send seeing practice forms by email ro rcvsexam@rcvs.org.uk (not with this application)
			</p>


			<p><b>Processing your application and acceptance as a candidate for the 2013 examination</b></p>
			<p>
				Please allow adequate time for your application to be processed after you have submitted it and do not immediately email or ring RCVS to chase receipt or progress.
		Receipt of documents will normally be acknowledged by email within 5 working days. If you chase for information about the progress of your application it causes unnecessary delays in the progress of applications.
			</p>

			<p>
				RCVS will write to confirm that you have met our examination entry requirements and give you your examination number <b>after</b> we have received <b>all</b> the items that make up a complete application (including evidence of your good professional standing which is sent to us on your behalf) and your examination fee payment has cleared - allow at least 14 days for clearance of a cheque.

			</p>

			<p>

				<input type="submit" value="Submit" />
			</p>
		</fieldset>
 }

	@section Scripts {
		@Scripts.Render("~/bundles/jqueryval")
		@Scripts.Render("~/bundles/jqueryui")

	}

	<script type="text/javascript">

		$(document).ready(function ()
		{
			$('#RegistrationDate').val($('#RegistrationDate').val().substring(0, 10));  //Remove the hour from the date
			//Attach datepicker
			$('#RegistrationDate').datepicker({
				dateFormat: "dd/mm/yy",
				changeMonth: true,
				changeYear: true,
				yearRange: "-80:+0"
			});

			$('#RegistrationExpiryDate').val($('#RegistrationExpiryDate').val().substring(0, 10)); //Remove the hour from the date
			//Attach datepicker
			$('#RegistrationExpiryDate').datepicker({
				dateFormat: "dd/mm/yy",
				changeMonth: true,
				changeYear: true,
				yearRange: "-0:+20"
			});
		});



		function addActivity(Activity)
		{
			$('#dialog').dialog({
				autoOpen: false,
				width: 400,
				resizable: false,
				title: 'hi there',
				modal: true,
				open: function (event, ui)
				{
					$(this).load("@Url.Action("Activity_Qualification")");
				},
				buttons: {
					"Close": function ()
					{
						$(this).dialog("close");
					}
				}
			});
				alert(1);
				$('#dialog').dialog('open');


			}



			function deleteActivity(Activity, RowNo)
			{

			}

			function editActivity(Activity, RowNo)
			{
				var i;

				debugger;

				$('#dialog').dialog({
					autoOpen: false,
					width: 400,
					resizable: false,
					title: 'hi there',
					modal: true,
					open: function (event, ui)
					{
						$(this).load("@Url.Action("Activity_Qualification")");
					},
					buttons: {
						"Close": function ()
						{
							$(this).dialog("close");
						}
					}
				});

					$('#dialog').dialog('open');
				}
	</script>
</div>
