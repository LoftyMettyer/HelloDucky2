Attribute VB_Name = "modMaternitySpecifics"
Option Explicit

Public Const gsPARAMETERKEY_ABSENCEPARENTALREGION = "Param_AbsenceParentalLeaveRegion"

Public Function ConfigureMaternitySpecifics() As Boolean
  
  Dim fOK As Boolean

  On Error GoTo ErrorTrap

  fOK = CreateParentalLeaveEntitlementSP()

  If fOK Then
    fOK = CreateParentalLeaveTakenSP()
  End If

  If fOK Then
    fOK = CreateMaternityExpectedReturnDateSP()
  End If


TidyUpAndExit:
  ConfigureMaternitySpecifics = fOK
  Exit Function
  
ErrorTrap:
  OutputError "Error configuring Maternity specifics"
  fOK = False
  Resume TidyUpAndExit

End Function


Private Function CreateParentalLeaveEntitlementSP()
  
  Dim strDependantsTableName As String
  Dim strDepDateOfBirthColumn As String
  Dim strDepDateAdoptedColumn As String
  Dim strDepDisabledColumn As String
  Dim lngPersID As Long
  Dim strPersonnelTableName As String
  Dim strPersonnelRegionColumn As String

  Dim fOK As Boolean
  Dim sSQL As String
  
  On Error GoTo ErrorTrap

  fOK = True
  DropProcedure "spASRSysFnParentalLeaveEntitlement"
  
  
  strDependantsTableName = GetModuleSetupValue(gsMODULEKEY_ABSENCE, gsPARAMETERKEY_DEPENDANTSTABLE, "T")
  strDepDateOfBirthColumn = GetModuleSetupValue(gsMODULEKEY_ABSENCE, gsPARAMETERKEY_DEPENDANTSDATEOFBIRTH, "C")
  strDepDateAdoptedColumn = GetModuleSetupValue(gsMODULEKEY_ABSENCE, gsPARAMETERKEY_DEPENDANTSADOPTEDDATE, "C")
  strDepDisabledColumn = GetModuleSetupValue(gsMODULEKEY_ABSENCE, gsPARAMETERKEY_DEPENDANTSDISABLED, "C")
  
  If strDependantsTableName = vbNullString Or _
     strDepDateOfBirthColumn = vbNullString Or _
     strDepDateAdoptedColumn = vbNullString Or _
     strDepDisabledColumn = vbNullString Then
        CreateParentalLeaveEntitlementSP = True
        Exit Function
  End If
  
  sSQL = "/* ------------------------------------------------ */" & vbNewLine & _
      "/* HR Pro Paternity module stored procedure.        */" & vbNewLine & _
      "/* Automatically generated by the System manager.   */" & vbNewLine & _
      "/* ------------------------------------------------ */" & vbNewLine & _
    "CREATE PROCEDURE [dbo].[spASRSysFnParentalLeaveEntitlement] (" & vbNewLine & _
    "@pdblResult    float OUTPUT," & vbNewLine & _
    "@iDependantID  int" & vbNewLine & _
    ")" & vbNewLine & _
    "AS" & vbNewLine & _
    "BEGIN" & vbNewLine & vbNewLine

  sSQL = sSQL & _
    "  DECLARE @DateOfBirth datetime" & vbNewLine & _
    "  DECLARE @AdoptedDate datetime" & vbNewLine & _
    "  DECLARE @Disabled bit" & vbNewLine & _
    "  DECLARE @Region varchar(MAX)" & vbNewLine & vbNewLine

  
  strPersonnelRegionColumn = GetModuleSetupValue(gsMODULEKEY_ABSENCE, gsPARAMETERKEY_ABSENCEPARENTALREGION, "C")
  If strPersonnelRegionColumn <> vbNullString Then
    lngPersID = Val(GetModuleSetupValue(gsMODULEKEY_PERSONNEL, gsPARAMETERKEY_PERSONNELTABLE, ""))
    strPersonnelTableName = GetTableName(lngPersID)

    sSQL = sSQL & _
      "  SELECT @DateOfBirth = " & strDepDateOfBirthColumn & _
             ", @AdoptedDate = " & strDepDateAdoptedColumn & _
             ", @Disabled = " & strDepDisabledColumn & _
             ", @Region = " & strPersonnelRegionColumn & vbNewLine & _
      "  FROM [" & strDependantsTableName & "] " & _
      "  JOIN [" & strPersonnelTableName & "] ON [" & strPersonnelTableName & "].ID = [" & strDependantsTableName & "].ID_" & CStr(lngPersID) & _
      "  WHERE [" & strDependantsTableName & "].ID = @iDependantID" & vbNewLine & vbNewLine
  Else
    sSQL = sSQL & _
      "  SELECT @DateOfBirth = " & strDepDateOfBirthColumn & _
             ", @AdoptedDate = " & strDepDateAdoptedColumn & _
             ", @Disabled = " & strDepDisabledColumn & _
             ", @Region = ''" & vbNewLine & _
      "  FROM [" & strDependantsTableName & "] " & _
      "  WHERE [" & strDependantsTableName & "].ID = @iDependantID" & vbNewLine & vbNewLine
  End If


  sSQL = sSQL & _
    "  EXEC spASRParentalLeaveEntitlement @pdblResult OUTPUT, @DateOfBirth, @AdoptedDate, @Disabled, @Region" & vbNewLine & vbNewLine
  
  sSQL = sSQL & _
    "END" & vbNewLine
  
  gADOCon.Execute sSQL, , adExecuteNoRecords

TidyUpAndExit:
  CreateParentalLeaveEntitlementSP = fOK
  Exit Function
  
ErrorTrap:
  fOK = False
  OutputError "Error creating Parental Leave Entitlement (Maternity)"
  Resume TidyUpAndExit

End Function


Private Function CreateParentalLeaveTakenSP()

  Dim lngPersID As Long
  Dim strDependantsTableName As String
  Dim strDepChildNoColumn As String
  Dim strAbsenceTableName As String
  Dim strAbsChildNoColumn As String
  Dim strAbsDuration As String
  Dim strAbsTypeColumn As String
  Dim strAbsParentalType As String
  
  Dim fOK As Boolean
  Dim sSQL As String
  
  On Error GoTo ErrorTrap
  
  fOK = True
  DropProcedure "spASRSysFnParentalLeaveTaken"
  
  
  lngPersID = Val(GetModuleSetupValue(gsMODULEKEY_PERSONNEL, gsPARAMETERKEY_PERSONNELTABLE, ""))
  strDependantsTableName = GetModuleSetupValue(gsMODULEKEY_ABSENCE, gsPARAMETERKEY_DEPENDANTSTABLE, "T")
  strDepChildNoColumn = GetModuleSetupValue(gsMODULEKEY_ABSENCE, gsPARAMETERKEY_DEPENDANTSCHILDNO, "C")
  strAbsenceTableName = GetModuleSetupValue(gsMODULEKEY_ABSENCE, gsPARAMETERKEY_ABSENCETABLE, "T")
  strAbsChildNoColumn = GetModuleSetupValue(gsMODULEKEY_ABSENCE, gsPARAMETERKEY_ABSENCECHILDNO, "C")
  strAbsDuration = GetModuleSetupValue(gsMODULEKEY_ABSENCE, gsPARAMETERKEY_ABSENCEDURATION, "C")
  strAbsTypeColumn = GetModuleSetupValue(gsMODULEKEY_ABSENCE, gsPARAMETERKEY_ABSENCETYPE, "C")
  strAbsParentalType = GetModuleSetupValue(gsMODULEKEY_ABSENCE, gsPARAMETERKEY_ABSENCEPARENTALLEAVETYPE, "")
  
  If lngPersID = 0 Or _
     strDependantsTableName = vbNullString Or _
     strDepChildNoColumn = vbNullString Or _
     strAbsenceTableName = vbNullString Or _
     strAbsChildNoColumn = vbNullString Or _
     strAbsDuration = vbNullString Or _
     strAbsTypeColumn = vbNullString Or _
     strAbsParentalType = vbNullString Then
        CreateParentalLeaveTakenSP = True
        Exit Function
  End If
  
  
  sSQL = "/* ------------------------------------------------ */" & vbNewLine & _
      "/* HR Pro Paternity module stored procedure.        */" & vbNewLine & _
      "/* Automatically generated by the System manager.   */" & vbNewLine & _
      "/* ------------------------------------------------ */" & vbNewLine & _
    "CREATE PROCEDURE [dbo].[spASRSysFnParentalLeaveTaken] (" & vbNewLine & _
    "@pdblResult    float OUTPUT," & vbNewLine & _
    "@iDependantID  int" & vbNewLine & _
    ")" & vbNewLine & _
    "AS" & vbNewLine & _
    "BEGIN" & vbNewLine & vbNewLine

  sSQL = sSQL & _
    "  DECLARE @ChildNo int" & vbNewLine & _
    "  DECLARE @PersID int" & vbNewLine & vbNewLine

  sSQL = sSQL & _
    "  SELECT @PersID = ID_" & CStr(lngPersID) & _
           ", @ChildNo = " & strDepChildNoColumn & vbNewLine & _
    "  FROM " & strDependantsTableName & " WHERE ID = @iDependantID" & vbNewLine & vbNewLine _

  sSQL = sSQL & _
    "  SELECT @pdblResult = sum(" & strAbsDuration & ") FROM " & strAbsenceTableName & vbNewLine & _
    "  WHERE ID_" & CStr(lngPersID) & " = @PersID" & vbNewLine & _
    "  AND " & strAbsChildNoColumn & " = @ChildNo" & vbNewLine & _
    "  AND " & strAbsTypeColumn & " = '" & strAbsParentalType & "'" & vbNewLine & vbNewLine _

  sSQL = sSQL & _
    "END" & vbNewLine

  gADOCon.Execute sSQL, , adExecuteNoRecords

TidyUpAndExit:
  CreateParentalLeaveTakenSP = fOK
  Exit Function
  
ErrorTrap:
  fOK = False
  OutputError "Error creating Parental Leave Taken (Maternity)"
  Resume TidyUpAndExit



End Function

Private Function CreateMaternityExpectedReturnDateSP()

  Dim strMaternityTableName As String
  Dim strMatEWCDateColumn As String
  Dim strMatLeaveTypeColumn As String
  Dim strMatLeaveStartColumn As String
  Dim strMatBabyBirthDateColumn As String

  Dim fOK As Boolean
  Dim sSQL As String
  
  On Error GoTo ErrorTrap
  
  
  fOK = True
  DropProcedure "spASRSysFnMaternityExpectedReturn"
  
  
  strMaternityTableName = GetModuleSetupValue(gsMODULEKEY_MATERNITY, gsPARAMETERKEY_MATERNITYTABLE, "T")
  strMatEWCDateColumn = GetModuleSetupValue(gsMODULEKEY_MATERNITY, gsPARAMETERKEY_MATERNITYEWCDATECOLUMN, "C")
  strMatLeaveTypeColumn = GetModuleSetupValue(gsMODULEKEY_MATERNITY, gsPARAMETERKEY_MATERNITYLEAVETYPECOLUMN, "C")
  strMatLeaveStartColumn = GetModuleSetupValue(gsMODULEKEY_MATERNITY, gsPARAMETERKEY_MATERNITYLEAVESTARTCOLUMN, "C")
  strMatBabyBirthDateColumn = GetModuleSetupValue(gsMODULEKEY_MATERNITY, gsPARAMETERKEY_MATERNITYBABYBIRTHCOLUMN, "C")
  
  If strMaternityTableName = vbNullString Or _
     strMatEWCDateColumn = vbNullString Or _
     strMatLeaveTypeColumn = vbNullString Or _
     strMatLeaveStartColumn = vbNullString Or _
     strMatBabyBirthDateColumn = vbNullString Then
        CreateMaternityExpectedReturnDateSP = True
        Exit Function
  End If


  sSQL = "/* ------------------------------------------------ */" & vbNewLine & _
      "/* HR Pro Maternity module stored procedure.        */" & vbNewLine & _
      "/* Automatically generated by the System manager.   */" & vbNewLine & _
      "/* ------------------------------------------------ */" & vbNewLine & _
    "CREATE PROCEDURE [dbo].[spASRSysFnMaternityExpectedReturn] (" & vbNewLine & _
    "@pdblResult datetime OUTPUT," & vbNewLine & _
    "@iMaternityID int" & vbNewLine & _
    ")" & vbNewLine & _
    "AS" & vbNewLine & _
    "BEGIN" & vbNewLine & vbNewLine

  sSQL = sSQL & _
    "  DECLARE @EWCDate datetime;" & vbNewLine & _
    "  DECLARE @LeaveStart datetime;" & vbNewLine & _
    "  DECLARE @BabyBirthDate datetime;" & vbNewLine & _
    "  DECLARE @Ordinary varchar(MAX);" & vbNewLine & vbNewLine

  sSQL = sSQL & _
    "  SELECT @Ordinary = " & strMatLeaveTypeColumn & vbNewLine & _
           ", @EWCDate = " & strMatEWCDateColumn & _
           ", @LeaveStart = " & strMatLeaveStartColumn & _
           ", @BabyBirthDate = " & strMatBabyBirthDateColumn & vbNewLine & _
    "  FROM " & strMaternityTableName & _
    "  WHERE ID = @iMaternityID;" & vbNewLine & vbNewLine

  sSQL = sSQL & _
    "  EXEC spASRMaternityExpectedReturn @pdblResult OUTPUT, @EWCDate, @LeaveStart, @BabyBirthDate, @Ordinary;" & vbNewLine & vbNewLine
  
  sSQL = sSQL & _
    "END" & vbNewLine

  gADOCon.Execute sSQL, , adExecuteNoRecords

TidyUpAndExit:
  CreateMaternityExpectedReturnDateSP = fOK
  Exit Function
  
ErrorTrap:
  fOK = False
  OutputError "Error creating Maternity Expected Return Date Procedure"
  Resume TidyUpAndExit

End Function
