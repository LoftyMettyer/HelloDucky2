Imports System.IO
Imports System.Xml
Imports System.Runtime.InteropServices

Namespace Things

  <ClassInterface(ClassInterfaceType.None), ComVisible(True), Serializable()> _
  Public Class Table
    Inherits Base
    Implements COMInterfaces.ITable
    Implements COMInterfaces.IObject

    Public Property TableType As TableType
    Public Property ManualSummaryColumnBreaks As Boolean
    Public Property AuditInsert As Boolean
    Public Property AuditDelete As Boolean
    Public Property DefaultOrderID As Integer
    Public Property DefaultEmailID As Integer
    Public Property IsRemoteView As Boolean

    Public Property RecordDescription() As RecordDescription
    Public Property Indexes As New List(Of Index)
    Public Property Columns As New List(Of Column)
    Public Property Validations As New List(Of Validation)
    Public Property Views As New List(Of View)
    Public Property TableOrders As New List(Of TableOrder)
    Public Property TableOrderFilters As New List(Of TableOrderFilter)
    Public Property Relations As New List(Of Relation)
    Public Property Expressions As New List(Of Expression)
    Public Property Masks As New List(Of Mask)
    Public Property Workflows As New List(Of Workflow)
    Public Property Screens As New List(Of Screen)
    Public Property DependsOnChildColumns As New List(Of Column)
    Public Property DependsOnParentColumns As New List(Of Column)

    Public Property CustomTriggers As ICollection(Of String) Implements ITable.CustomTriggers
    Public Property UpdateStatements As New ArrayList

    Public Sub New()
      CustomTriggers = New Collection(Of String)
    End Sub

    Public Overrides ReadOnly Property PhysicalName As String
      Get
        Return ScriptDB.Consts.UserTable & MyBase.Name
      End Get
    End Property

    Public Overrides ReadOnly Property Type As Enums.Type
      Get
        Return Enums.Type.Table
      End Get
    End Property

    Public Function GetRelation(ByVal ID As Integer) As Things.Relation

      Dim relation As New Things.Relation

      For Each relation In Me.Relations
        If relation.RelationshipType = ScriptDB.RelationshipType.Child Then
          If relation.ChildID = ID Then
            Return relation
          End If
        Else
          If relation.ParentID = ID Then
            Return relation
          End If
        End If
      Next

      'TODO: supposed to be returning blank one if not found?
      Return relation

    End Function

#Region "TableOrderFilter"

    Public Function TableOrderFilter(ByRef RowDetails As Things.ChildRowDetails) As Things.TableOrderFilter

      'ByRef Order As Things.TableOrder, ByRef Filter As Things.Expression _
      '            , ByRef Relation As Things.Relation) As Things.TableOrderFilter

      For Each filer As TableOrderFilter In Me.TableOrderFilters

        If filer.RowDetails.Order Is RowDetails.Order _
            And filer.RowDetails.Filter Is RowDetails.Filter _
            And filer.RowDetails.Relation Is RowDetails.Relation _
            And filer.RowDetails.RowNumber = RowDetails.RowNumber _
            And filer.RowDetails.RowSelection = RowDetails.RowSelection Then
          Return filer
        End If
      Next

      ' New table filter. Add to the stack and return
      Dim filter As New Things.TableOrderFilter
      filter.RowDetails.Order = RowDetails.Order
      filter.RowDetails.Filter = RowDetails.Filter()
      filter.RowDetails.Relation = RowDetails.Relation
      filter.RowDetails.RowNumber = RowDetails.RowNumber
      filter.RowDetails.RowSelection = RowDetails.RowSelection
      filter.ComponentNumber = Me.TableOrderFilters.Count + 1
      filter.Table = Me
      Me.TableOrderFilters.Add(filter)

      Return filter

    End Function

#End Region

#Region "Triggers that are still generated in the system manager need appending to the ones generated in this module. Eventually get rid of as and when port work continues"

    Private msSysMgrInsertTrigger As String
    Private msSysMgrUpdateTrigger As String
    Private msSysMgrDeleteTrigger As String

    Public Property SysMgrDeleteTrigger As String Implements COMInterfaces.ITable.SysMgrDeleteTrigger
      Get
        Return String.Format("---------------------------------------------" & vbNewLine & _
            "-- Script generated by the System Manager" & vbNewLine & _
            "---------------------------------------------" & vbNewLine & _
            "{0}" & vbNewLine, msSysMgrDeleteTrigger)
      End Get
      Set(ByVal value As String)
        msSysMgrDeleteTrigger = value
      End Set
    End Property

    Public Property SysMgrInsertTrigger As String Implements COMInterfaces.ITable.SysMgrInsertTrigger
      Get
        Return String.Format("---------------------------------------------" & vbNewLine & _
            "-- Script generated by the System Manager" & vbNewLine & _
            "---------------------------------------------" & vbNewLine & _
            "{0}" & vbNewLine, msSysMgrInsertTrigger)
      End Get
      Set(ByVal value As String)
        msSysMgrInsertTrigger = value
      End Set
    End Property

    Public Property SysMgrUpdateTrigger As String Implements COMInterfaces.ITable.SysMgrUpdateTrigger
      Get
        Return String.Format("---------------------------------------------" & vbNewLine & _
            "-- Script generated by the System Manager" & vbNewLine & _
            "---------------------------------------------" & vbNewLine & _
            "{0}" & vbNewLine, msSysMgrUpdateTrigger)

      End Get
      Set(ByVal value As String)
        msSysMgrUpdateTrigger = value
      End Set
    End Property

#End Region

  End Class
End Namespace