Imports System.Runtime.InteropServices
Imports SystemFramework.Enums
Imports SystemFramework.Structures

<ClassInterface(ClassInterfaceType.None), ComVisible(True), Serializable()>
Public Class Table
  Inherits Base
  Implements ITable
  Implements IObject

  Public Property TableType As TableType
  Public Property AuditInsert As Boolean
  Public Property AuditDelete As Boolean
  Public Property DefaultOrderId As Integer
  Public Property DefaultEmailId As Integer
  Public Property IsRemoteView As Boolean
  Public Property RecordDescription() As RecordDescription

  Public Property Indexes As ICollection(Of Index)
  Public Property Columns As ICollection(Of Column)
  Public Property Validations As ICollection(Of Validation)
  Public Property Views As ICollection(Of View)
  Public Property TableOrders As ICollection(Of TableOrder)
  Public Property TableOrderFilters As ICollection(Of TableOrderFilter)
  Public Property Relations As ICollection(Of Relation)
  Public Property Expressions As ICollection(Of Expression)
  Public Property Masks As ICollection(Of Mask)
  Public Property DependsOnChildColumns As ICollection(Of Column)
  Public Property DependsOnParentColumns As ICollection(Of Column)
  Public Property FusionMessages As ICollection(Of FusionMessage)

  Public Sub New()
    Indexes = New Collection(Of Index)
    Columns = New Collection(Of Column)
    Validations = New Collection(Of Validation)
    Views = New Collection(Of View)
    TableOrders = New Collection(Of TableOrder)
    TableOrderFilters = New Collection(Of TableOrderFilter)
    Relations = New Collection(Of Relation)
    Expressions = New Collection(Of Expression)
    Masks = New Collection(Of Mask)
    DependsOnChildColumns = New Collection(Of Column)
    DependsOnParentColumns = New Collection(Of Column)
    FusionMessages = New Collection(Of FusionMessage)
  End Sub

  Public Overrides ReadOnly Property PhysicalName As String
    Get
      Return ScriptDB.Consts.UserTable & Name
    End Get
  End Property

  Public Function GetRelation(ByVal toTableId As Integer) As Relation

    Dim relation As Relation

    For Each relation In Relations
      If relation.RelationshipType = RelationshipType.Child Then
        If relation.ChildId = toTableId Then
          Return relation
        End If
      Else
        If relation.ParentId = toTableId Then
          Return relation
        End If
      End If
    Next

    'TODO: supposed to be returning blank one if not found?
    Return relation

  End Function

#Region "TableOrderFilter"

  Public Function TableOrderFilter(ByVal rowDetails As ChildRowDetails) As TableOrderFilter

    'ByVal Order As TableOrder, ByVal Filter As Expression _
    '            , ByVal Relation As Relation) As TableOrderFilter

    For Each filer As TableOrderFilter In TableOrderFilters

      If filer.RowDetails.Order Is rowDetails.Order _
          And filer.RowDetails.Filter Is rowDetails.Filter _
          And filer.RowDetails.Relation Is rowDetails.Relation _
          And filer.RowDetails.RowNumber = rowDetails.RowNumber _
          And filer.RowDetails.RowSelection = rowDetails.RowSelection Then
        Return filer
      End If
    Next

    ' New table filter. Add to the stack and return
    Dim filter As New TableOrderFilter
    filter.RowDetails.Order = rowDetails.Order
    filter.RowDetails.Filter = rowDetails.Filter()
    filter.RowDetails.Relation = rowDetails.Relation
    filter.RowDetails.RowNumber = rowDetails.RowNumber
    filter.RowDetails.RowSelection = rowDetails.RowSelection
    filter.ComponentNumber = TableOrderFilters.Count + 1
    filter.Table = Me
    TableOrderFilters.Add(filter)

    Return filter

  End Function

#End Region

#Region "Triggers that are still generated in the system manager need appending to the ones generated in this module. Eventually get rid of as and when port work continues"

  Private _msSysMgrInsertTrigger As String
  Private _msSysMgrUpdateTrigger As String
  Private _msSysMgrDeleteTrigger As String

  Public Property SysMgrDeleteTrigger As String Implements ITable.SysMgrDeleteTrigger
    Get
      Return String.Format("---------------------------------------------" & vbNewLine & _
          "-- Script generated by the System Manager" & vbNewLine & _
          "---------------------------------------------" & vbNewLine & _
          "{0}" & vbNewLine, _msSysMgrDeleteTrigger)
    End Get
    Set(ByVal value As String)
      _msSysMgrDeleteTrigger = value
    End Set
  End Property

  Public Property SysMgrInsertTrigger As String Implements ITable.SysMgrInsertTrigger
    Get
      Return String.Format("---------------------------------------------" & vbNewLine & _
          "-- Script generated by the System Manager" & vbNewLine & _
          "---------------------------------------------" & vbNewLine & _
          "{0}" & vbNewLine, _msSysMgrInsertTrigger)
    End Get
    Set(ByVal value As String)
      _msSysMgrInsertTrigger = value
    End Set
  End Property

  Public Property SysMgrUpdateTrigger As String Implements ITable.SysMgrUpdateTrigger
    Get
      Return String.Format("---------------------------------------------" & vbNewLine & _
          "-- Script generated by the System Manager" & vbNewLine & _
          "---------------------------------------------" & vbNewLine & _
          "{0}" & vbNewLine, _msSysMgrUpdateTrigger)

    End Get
    Set(ByVal value As String)
      _msSysMgrUpdateTrigger = value
    End Set
  End Property

#End Region

End Class
